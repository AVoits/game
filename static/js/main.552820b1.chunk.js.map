{"version":3,"sources":["ProjectManagementTriangle/textForRange.js","ProjectManagementTriangle/rangesTemplate.js","App.js","serviceWorker.js","index.js"],"names":["textForLabels","cost","time","scope","ExampleApp","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","commonPoints","max","params","length","dependentComponent","rangeChange","bind","assertThisInitialized","textForRangePoint","inherits","createClass","key","value","currentRange","filter","item","currentRangeName","_this2","getComponentsExceptCurrent","randomNextDC","getRandom","anotherNextDC","setState","prevState","nextState","Math","abs","console","error","concat","mathAction","currentDC","restParam","_this3","react_default","a","createElement","WrapperCommon","TitleBlock","Title","Step","RangeBlock","className","Form","SectionTitle","js_default","step","formatLabel","name","maxValue","minValue","min","onChange","currentTexts","getRandomInt","floor","random","React","Component","styled","div","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","form","_templateObject6","span","_templateObject7","App","rangesTemplate_ExampleApp","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.552820b1.chunk.js","sourcesContent":["\nconst cost = [\n    'Даром',\n    'Дешево',\n    'Средняя по рынку',\n    'Дорого',\n    'Разорительно',\n];\n\nconst time = [\n    'Слоупок',\n    'Медленно',\n    'Быстро',\n    'Очень быстро',\n    'Моментально',\n];\n\nconst scope = [\n    'Сразу выбросить',\n    'Сойдет',\n    'Есть куда стремиться',\n    'Отлично',\n    'Идеально',\n];\n\n\nexport const textForLabels = {\n    cost: cost,\n    time: time,\n    scope: scope,\n};","import React from 'react';\nimport InputRange from 'react-input-range';\nimport styled from 'styled-components';\nimport {textForLabels} from \"./textForRange\";\n\n\nexport class ExampleApp extends React.Component {\n\n    static params = ['cost', 'time', 'scope'];\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            commonPoints: ((this.props.max) * ExampleApp.params.length)/2,\n            cost: this.props.max/2,\n            time: this.props.max/2,\n            scope: this.props.max/2,\n            dependentComponent: null,\n        };\n\n        this.rangeChange = this.rangeChange.bind(this);\n\n        ExampleApp.textForRangePoint = ExampleApp.textForRangePoint.bind(this);\n\n    }\n\n    static textForRangePoint(value, name) {\n        const currentTexts = textForLabels[name];\n        return currentTexts[value - 1] ? currentTexts[value - 1] : 'add text!!!';\n    }\n\n    static getRandom() {\n       return ExampleApp.getRandomInt(0, 2);\n    }\n\n    static getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    getComponentsExceptCurrent(currentRange) {\n        return ExampleApp.params.filter(item => item !== currentRange);\n    }\n\n    rangeChange(value, currentRangeName) {\n\n        const params = this.getComponentsExceptCurrent(currentRangeName);\n        const randomNextDC = params[ExampleApp.getRandom()];\n        const anotherNextDC = params.filter(item => item !== randomNextDC)[0];\n\n        this.setState((prevState) => {\n\n            const nextState = {};\n\n            if(Math.abs(prevState[currentRangeName] - value) !== 1) {\n\n                nextState.time = this.props.max/2;\n                nextState.scope = this.props.max/2;\n                nextState.cost = this.props.max/2;\n                nextState.dependentComponent = null;\n\n                console.error(`нарушен шаг ${prevState[currentRangeName] - value} хз почему`);\n\n                return nextState;\n            }\n\n\n            const mathAction = prevState[currentRangeName] > value ? 'minus' : 'plus';\n\n            nextState[currentRangeName] = value;\n\n            if(mathAction === 'minus') {\n\n                const currentDC = this.state[randomNextDC] < this.props.max ?\n                    randomNextDC : anotherNextDC;\n\n                const restParam = params.filter(item => item !== currentRangeName && item !== currentDC)[0];\n                nextState[restParam] = this.state[restParam];\n\n                nextState.dependentComponent = currentDC;\n\n                nextState[currentDC] = this.state.commonPoints - value - prevState[restParam];\n            }\n\n            if (mathAction === 'plus') {\n\n                const currentDC = this.state[randomNextDC] === 0 ?\n                    anotherNextDC : randomNextDC;\n\n                const restParam = params.filter(item => item !== currentRangeName && item !== currentDC)[0];\n                nextState[restParam] = this.state[restParam];\n\n                nextState.dependentComponent = currentDC;\n\n                nextState[currentDC] = this.state.commonPoints - value - this.state[restParam];\n            }\n\n            return nextState;\n        })\n    }\n\n\n    render() {\n        return (\n            <WrapperCommon>\n                <TitleBlock>\n                    <Title>Настрой бухгалтера</Title>\n                    <Step>5/10</Step>\n                </TitleBlock>\n                <RangeBlock className={'project-management-triangle'}>\n                    <Form className=\"form\">\n                        <section className={'scope'}>\n                            <SectionTitle>\n                                <span>Качество</span>\n                                <span>{ExampleApp.textForRangePoint(this.state.scope, 'scope')}</span>\n                            </SectionTitle>\n                            <InputRange\n                                step={1}\n                                formatLabel={() => ''}\n                                name={'scope'}\n                                maxValue={this.props.max}\n                                minValue={this.props.min}\n                                value={this.state.scope}\n                                onChange={value => this.rangeChange(value, 'scope')}/>\n                        </section>\n                        <section className={'cost'}>\n                            <SectionTitle>\n                                <span>Стоимость</span>\n                                <span>{ExampleApp.textForRangePoint(this.state.cost, 'cost')}</span>\n                            </SectionTitle>\n                            <InputRange\n                                step={1}\n                                formatLabel={() => ''}\n                                name={'cost'}\n                                maxValue={this.props.max}\n                                minValue={this.props.min}\n                                value={this.state.cost}\n                                onChange={value => this.rangeChange(value, 'cost')}/>\n\n                        </section>\n                        <section className={'time'}>\n                            <SectionTitle>\n                                <span>Скорость</span>\n                                <span>{ExampleApp.textForRangePoint(this.state.time, 'time')}</span>\n                            </SectionTitle>\n                            <InputRange\n                                step={1}\n                                formatLabel={() => ''}\n                                name={'time'}\n                                maxValue={this.props.max}\n                                minValue={this.props.min}\n                                value={this.state.time}\n                                onChange={value => this.rangeChange(value, 'time')}/>\n                        </section>\n                    </Form>\n                </RangeBlock>\n            </WrapperCommon>\n        );\n    }\n\n}\n\n\nconst WrapperCommon = styled.div`\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n  font-family: 'Raleway', sans-serif;\n`;\n\n\nconst TitleBlock = styled.div`\n  font-size: 24px;\n  font-weight: 500;\n  color: #4f4f4f;\n  margin: 24px 16px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n    width: 30%;\n`;\n\nconst Step = styled.div`\n    \n`;\n\nconst RangeBlock = styled.div`\n  margin: 16px;\n  border-radius: 10px;\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.08);\n  background-color: #ffffff;\n`;\n\n\nconst Form = styled.form`\n    width: 80%;\n    margin: 0 auto;\n`;\n\n\nconst SectionTitle = styled.span`\n    color: #4f4f4f;\n    display: flex;\n    justify-content: space-between;\n    \n    span:first-of-type {\n        opacity: 0.5;\n    }\n`;\n\n\n","import React, { Component } from 'react';\nimport {ExampleApp} from \"./ProjectManagementTriangle/rangesTemplate\";\n\nimport './ProjectManagementTriangle/range.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <ExampleApp min={0} max={6}/>\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}